image: node:14.18.2
pipelines:
  default:
    - step:
        name: Test App
        caches:
          - node
        script:
          - rm -rf package-lock.json
          - rm -rf node_modules
          - npm install
  branches:
    master:
      - step:
          name: Installing & Running Tests
          caches:
            - node
          script:
            - rm -rf package-lock.json
            - rm -rf node_modules
            - npm install

  custom: # Pipelines that can only be triggered manually
    staging:
      - step:
          name: Build
          script:
            - npm install --production
            - REACT_APP_ENVIRONMENT=staging npm run build
          artifacts:
            - build/**
      - step:
          name: Create artifact
          script:
            - git archive --format=tar.gz master -o application.tar.gz
          artifacts:
            - application.tar.gz
      - step:
          name: Deploy
          deployment: Staging
          caches:
            - node
          script:
            - pipe: atlassian/heroku-deploy:1.1.4
              variables:
                HEROKU_API_KEY: $HEROKU_API_KEY
                HEROKU_APP_NAME: $HEROKU_APP_NAME
                ZIP_FILE: "application.tar.gz"
                WAIT: 'false'
      # - step:
      #     name: Deploy to S3
      #     deployment: staging
      #     script:
      #       - pipe: atlassian/aws-s3-deploy:0.2.4
      #         variables:
      #           AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      #           AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      #           AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
      #           S3_BUCKET: $STAGING_BUCKET_NAME
      #           ACL: "public-read"
      #           LOCAL_PATH: "build"
    production:
      - step:
          name: Build
          script:
            - npm install --production
            - REACT_APP_ENVIRONMENT=production npm run build
          artifacts:
            - build/**
      - step:
          name: Deploy to S3
          deployment: production
          script:
            - pipe: atlassian/aws-s3-deploy:0.2.4
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                S3_BUCKET: $PRODUCTION_BUCKET_NAME
                ACL: "public-read"
                LOCAL_PATH: "build"
      - step:
          name: Invalidate Cloudfront Cache
          script:
            - pipe: atlassian/aws-cloudfront-invalidate:0.1.1
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                DISTRIBUTION_ID: $PRODUCTION_DISTRIBUTION_ID
  